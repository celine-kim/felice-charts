# Default values for felice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

########## REPLICA SETTING ##########
# currently support only 1
replicaCount: 1

########## CONTAINER IMAGE SETTING ##########
images:
  registry: "sparkandassociates"  # docker hub
  pullPolicy: "Always"
  serverVersion: 1.4.4
  clientVersion: 1.3.3
  monitorVersion: 2.32
  
imagePullSecrets: #[]
  - name: "dockerhub-sparkandassociates"
  - name: "bccard-dockerhub-sparkandassociates"
  - name: "kt-nexr-dockerhub-sparkandassociates"


########## HELM NAME SETTING ##########
nameOverride: "spark"
fullnameOverride: ""


########## EXECUTION SETTING ##########
configs:
  volumes:
    tsdb:
      storage: 100Gi
      storageClass: ""
    rulesdir:
      storage: 1Gi
      storageClass: ""
    datadir:
      storage: 10Gi
      storageClass: ""


########## MONITORING CLUSTER SETTING ##########
## for monitoring cluster config
monitoringClusters:
  ## first cluster setting
  - name: "kafka"
    zookeeper:
      # domainSuffix: "default.svc.cluster.local"     # if zookeeper is installed on other namespace
      hostPrefix: "zookeeper-spark"
      servers: 3
      clientPort: 2181
    kafka:
      version: "2.8.0"  # major.minor.0 format
      # domainSuffix: "default.svc.cluster.local"     # if kafka is installed on other namespace
      hostPrefix: "kafka-spark"
      servers: 3
      clientPort: 9093
      ## for burrow
      security:
        protocol: "sasl"  ## only sasl or tls
        mechanism: "SCRAM-SHA-512"
        username: "admin"
        password: "admin-secret"
    # schema_registry:
    #   # domainSuffix: "default.svc.cluster.local"     # if kafka is installed on other namespace
    #   serviceName: "schema-registry-schema-registry-spark-hs"
    #   jmxExporterPort: 9404
    #   nodeExporterPort: 9100
  # ## second cluster setting
  # - name: "kafka270"
  #   kafka:
  #     helmReleaseName: "kafka270"
  #     servers: "3"
  #     jmxExporterPort: "9404"
  #     nodeExporterPort: "9100"

########## K8S SERVICE SETTING ##########
service:
  type: NodePort
  ports:
    - name: web
      port: 8080
      # targetPort: 8080
      nodePort: 31080
    - name: mon
      port: 9090
      # targetPort: 9090
      nodePort: 31090


########## K8S RESOURCE SETTING ##########
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

########## K8S AUTOSCALE SETTING : MUST DISABLE ##########
autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 100
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

########## OTHER SETTING ##########
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: #{}
  ## For security reasons, make the container's process owner group non-root
  fsGroup: 1000620000  # from okd, no specific meaning

securityContext: #{}
  ## For security reasons, make the container's process owner non-root
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000620000  # from okd, no specific meaning

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
